# vim: ft=turtleson ts=2 sw=2 list fdm=indent :
#
# This file is the definitive source from which we generate
#
#   * the database schema (for Mongoose)
#   * the ontology (described JSON-LD)
#   * the REST API (GET/POST/PUT/DELETE /api/MyClass
#   * the REST API documentation (Swagger)
#


@ns
	infolis <http://infolis.gesis.org/infolink/schema/>
	dc      <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	dc      <http://purl.org/dc/elements/1.1/>
	owl     <http://www.w3.org/2002/07/owl#>
	rdfs    <http://www.w3.org/2000/01/rdf-schema#>
	skos    <http://www.w3.org/2004/02/skos/core#>
	xsd     <http://www.w3.org/2001/XMLSchema#>
	dcterms <http://purl.org/dc/terms/>
	schema  <http://schema.org/>
	bibo    <http://purl.org/ontology/bibo/>
	foaf    <http://xmlns.com/foaf/0.1/>
	science <http://semanticscience.org/resource/>
	dqm     <http://purl.org/dqm-vocabulary/v1/dqm#>
	uri4uri <http://uri4uri.net/vocab#>
	dm2e    <http://onto.dm2e.eu/schema/dm2e/>
	omnom   <http://onto.dm2e.eu/omnom/>
	dcat    <http://www.w3.org/ns/dcat#>

@context
	@id: infolis:
	dc:description "Infolis Data model"
	dc:version
		@value "2015-11-20T00:18:23Z"
		@type xsd:dateTime

Execution
	@context
		dc:description "The concrete execution of an Algorithm."
		rdfs:subClassOf 
			@id schema:Action
		rdfs:seeAlso
			@id: 'infolis:Algorithm'
	algorithm
		@context
			dc:description "Java class of the algorthim which is supposed to be executed within this execution."
		required true
		index: true
		type: String
		enum: [
			'io.github.infolis.algorithm.TextExtractor'
			'io.github.infolis.algorithm.BibliographyExtractor'
			'io.github.infolis.algorithm.FrequencyBasedBootstrapping'
			'io.github.infolis.algorithm.ReliabilityBasedBootstrapping'
			'io.github.infolis.algorithm.DaraLinker'
			'io.github.infolis.algorithm.ApplyPatternAndResolve'
			'io.github.infolis.algorithm.FederatedSearcher'
			'io.github.infolis.algorithm.Indexer'
			'io.github.infolis.algorithm.Learner'
			'io.github.infolis.algorithm.LocalResolver'
			'io.github.infolis.algorithm.MetaDataExtractor'
			'io.github.infolis.algorithm.PatternApplier'
			'io.github.infolis.algorithm.SearchTermPosition'
			'io.github.infolis.algorithm.VersionPatternApplier'
		]
	status
		@context
			dc:description """
				Status of the execution (PENDING, STARTED, FINISHED, FAILED).
				Default (when starting): ExecutionStatus.PENDING
				"""
			dc:example 'SUCCESS'
		required true
		type String
		index: true
		enum: [
			"PENDING"
			"STARTED"
			"FAILED"
			"FINISHED"
		]
		hideFromSwagger: true
	log
		@context
			dc:description "Log messages of this execution."
		type: ArrayOfStrings
		hideFromSwagger: true
	startTime
		@context
			owl:sameAs schema:startTime
			@type xsd:date
			dc:description "Timestamp when execution started."
		type Date
		index: true
		hideFromSwagger: true
	endTime
		@context
			owl:sameAs schema:endTime
			@type xsd:date
			dc:description "Timestamp when execution ended."
		type Date
		index: true
		hideFromSwagger: true
	progress
		@context
			dc:description "Numerical progress of the execution in the interval 0-100."
		type: Number
		hideFromSwagger: true
	#
	# Parameters
	#
	inputFiles
		@context
			dc:description """
				List of URIs of input files.
				Can be either PDF or text files.
				They are for example used to search patterns within the Pattern Applier algorithm.
				"""
		refMany: infolis:InfolisFile
	outputFiles
		@context
			dc:description "List of URIs of output files. Output files to save the output files (txt files) of algorithms."
		refMany: infolis:InfolisFile
	removeBib
		@context
			dc:description "Whether to remove the bibliography from text/plain document."
		type Boolean
		index: true
	outputDirectory
		@context
			dc:description "Output directory of the indexer."
		type String
	phraseSlop
		@context
			dc:description "Phrase Slop for Lucene query parser."
		index: true
		type: Number
	upperCaseConstraint
		@context
			dc:description "Indicates whether we require a term to contain at least one upper case character."
		index: true
		type Boolean
	allowLeadingWildcards
		@context
			dc:description "Whether leading wildcards are allowed."
		index: true
		type Boolean
	maxClauseCount
		@context
			dc:description "Maximum Numb"
		index: true
		type: Number
	searchTerm
		@context
			dc:description """
				A search term that can be used in different algorithms whenever
				something a certain term needs to be searched in a text.
				For example, the bootstrapping algorithms need a seed in the beginning to start
				the whole process. The search term represents such a seed, e.g. the study name 'ALLBUS'.
				"""
		index: true
		type String
	searchQuery
		@context
			dc:description "TODO"
		refOne infolis:SearchQuery
	textualReferences
		@context
			dc:description "References found"
		refMany infolis:TextualReference
	matchingFiles
		@context
			dc:description "Matching files"
		refMany infolis:InfolisFile
	patterns
		@context
			dc:description "Generated patterns"
		refMany infolis:InfolisFile
	seeds
		@context
			dc:description "The initial seeds for learning."
		type ArrayOfStrings
	maxIterations
		@context
			dc:description "Maximum number of iterations."
		index: true
		type Number
	reliabilityThreshold
		@context
			dc:description "Determines which patterns are the relevant ones."
		index: true
		type Number
	bootstrapStrategy
		@context
			dc:description "Strategy to use for bootstrapping. Can either be: mergeCurrent, mergeNew, mergeAll, separate, reliability."
		type: String
		enum: [
			'mergeCurrent'
			'mergeNew'
			'mergeAll'
			'separate'
			'reliability'
		]
	links
		@context
			dc:description "The found EntityLinks."
		refMany infolis:EntityLink
	queryServices
		@context
			dc:description "List of QueryService to use"
		refMany infolis:QueryService
	searchResults
		@context
			dc:description "Search results"
		refMany infolis:SearchResult
	tagMap
		@context
			dc:description "The set of tags to search for"
		refOne infolis:TagMap

SearchQuery
	@context
		dc:description "A search query"
	query
		@context
			dc:description "The query string"
		type String
		required: yes
		index: true

Entity
	@context
		dc:description "An entity to be linked from or to, a Dataset or a Publication or a SearchResult"
	name
		@context
			dc:description "Name of the entity"
		type String
		index: true
	identifier
		@context
			dc:description "TODO"
		type String
		index: true
	tags
		@context
			dc:description "Tags to assign to this entity"
		type ArrayOfStrings
		index: true
	textualReferences
		@context
			dc:description "TODO"
		refMany infolis:TextualReference
	file
		@context
			dc:description "The InfolisFile that manifests this entity"
		refOne infolis:InfolisFile

SearchResult
	@context
		dc:description "A search result"
		rdfs:subClassOf
			@id infolis:Entity
	name
		@context
			dc:description "TODO"
		type String
		index: true
	identifier
		@context
			dc:description "TODO"
		type String
		index: true
	tags
		@context
			dc:description "tags to assign to this search result"
		type ArrayOfStrings
		index: true
	textualReferences
		@context
			dc:description "TODO"
		refMany TextualReference
	listIndex
		@context
			dc:description "Position in the list of search results"
		type Number
		index: true
	relevanceScore
		@context
			dc:description "Relevance score as calculated by the search engine"
		type Number
		index: true
	date
		@context
			dc:description "Date of the search resul"
		type String
		index: true
	queryService
		@context
			dc:description "Query Service used to retrieve search result."
		type String
	titles
		@context
			dc:description "TODO"
		type ArrayOfStrings
	numericInformation
		@context
			dc:description "TODO"
		type ArrayOfStrings

InfolisPattern
	@context
		dc:description 'A Regular Expression pattern'
	patternRegex
		@context
			@id dqm:regex
		type String
	luceneQuery
		@context
			dc:description "TODO"
		type String
		index: true
	minimal
		@context
			dc:description "TODO"
		type String
	words
		@context
			dc:description "TODO"
		type ArrayOfStrings
	threshold
		@context
			dc:description "TODO"
		type Number
		index: true
	reliability
		@context
			dc:description "TODO"
		type Number
		index: true
	tags
		@context
			dc:description "Tags to assign to this pattern"
		type ArrayOfStrings
		index: true

InfolisFile
	@context
		owl:sameAs
			@id omnom:File
	md5
		@context
			owl:sameAs
				@id omnom:md5
			@type xsd:string
			dc:description "MD5 checksum"
		type String
		validate 'MD5'
		required: no
		index: true
	fileName
		@context
			@type @id
			owl:sameAs
				@id omnom:fileName
		type String
		required: no
		index: true
	mediaType
		@context
			owl:sameAs dcat:mediaType
			dc:description "The IANA media type of this file"
		type String
		enum: [
			"application/pdf"
			"text/plain"
		]
		required: true
		index: true
	fileStatus
		@context
			@id omnom:fileStatus
		type: String
		enum: [
			'AVAILABLE'
			'DELETED'
		]
		required: no
		index: true
	tags
		@context
			owl:sameAs
				@id dc:subject
			dc:description "A set of free form tags to attach to files"
		type ArrayOfStrings
		required: no
		index: true

QueryService
	@context
		dc:description "A query service"
	reliability
		@context
			dc:description "The reliablity of this QueryService"
		type: Number
		required: yes
		index: true
	target
		@context
			dc:description "The target of this QueryService, in most cases a URI"
			rdfs:range
				@id xsd:anyURI
		type: String
		required: yes
		index: true

TextualReference
	@context
		dc:description "Class for saving contexts (= surrounding words of a term)."
	leftWords
		@context
			dc:description "Words left of the term"
		type: ArrayOfStrings
	rightWords
		@context
			dc:description "Words right of the term"
		type: ArrayOfStrings
	leftText
		@context
			dc:description 'Text left of the term'
		type: String
	rightText
		@context
			dc:description 'Text right of the term'
		type: String
	term
		@context
			dc:description "The term"
		type: String
		index: true
	textFile
		@context
			dc:description "The file this reference came from"
		refOne: infolis:InfolisFile

TagMap
	@context
		dc:description "Class for selecting InfolisFiles or InfolisPatterns based on their tags"
	infolisFileTags
		@context
			dc:description "Find InfolisFiles with any of these tags"
		type: ArrayOfStrings
	infolisPatternTags
		@context
			dc:description "Find InfolisPatterns with any of these tags"
		type: ArrayOfStrings

# EntityLink
